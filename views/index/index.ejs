<div class="container-fluid">

	<h1 class="my-5 pt-2 titulodesc">
		Mundo Colarinho
	</h1>

	<div class="text-right titulodesc">
		<button type="button" onclick="obterLocalizacao()" class="btn btn-primary">Ativar Minha Localização!</button>
	</div>
</div>

<div id="mapa"></div>

<%- contentFor("espaco-head") %>

<link rel="stylesheet" href="/public/css/leaflet-1.7.1.css" />
<style type="text/css">
	#mapa {
		max-width: 100%;
		height: 400px;
	}
</style>

<%- contentFor("espaco-rodape") %>
<script type="text/javascript" src="/public/js/leaflet-1.7.1.js"></script>

<script type="text/javascript">
	let mapa = L.map("mapa", { zoomControl: false }),
		markerLocal = null, procurandoLocalizacao = false,
		highDpi = ("matchMedia" in window),
		popup = L.popup();

	highDpi = (highDpi && (highDpi = window.matchMedia("(min-resolution: 150dpi)")) && highDpi.matches);

	function obterLocalizacao() {
		if (procurandoLocalizacao)
			return;

		waitSwal();

		let erroLocalizacao = function () {
			procurandoLocalizacao = false;
			Swal.fire({
				icon: "error",
				title: "Oops...",
				text: "Não foi possível obter sua localização no momento. Por favor, tente novamente dentro de alguns instantes"
			});
		};

		if (!("geolocation" in navigator) || !navigator.geolocation.getCurrentPosition) {
			erroLocalizacao();
			return;
		}

		procurandoLocalizacao = true;

		navigator.geolocation.getCurrentPosition(function (location) {
			procurandoLocalizacao = false;
			if (!location || !location.coords) {
				erroLocalizacao();
			} else {
				Swal.close();
				mapa.setView(new L.LatLng(location.coords.latitude, location.coords.longitude), 16);
				if (markerLocal) {
					markerLocal.remove();
					markerLocal = null;
				}
				markerLocal = L.marker([location.coords.latitude, location.coords.longitude], { icon: L.icon({
					iconUrl: (highDpi ? "/public/img/marker@2x.png" : "/public/img/marker.png"),
					iconSize: [25, 34],
					iconAnchor: [12, 34],
					popupAnchor: [0, 25]
				}) });
				markerLocal.addTo(mapa);
			}
		}, erroLocalizacao, {
			maximumAge: 60 * 60 * 1000,
			timeout: 20 * 1000,
			enableHighAccuracy: true
		});
	}

	function onMarkerClick() {
		// Aqui dentro, this é o objeto marker que foi clicado.
		// Se quiser deixar vários popups abertos, é só ter um popup por marker,
		// diferente daqui, onde a gente reaproveita o objeto popup o tempo todo.

		let ponto = this.ponto;

		popup.setLatLng([ponto.lat_local, ponto.lng_local]);
		popup.setContent("<h1>" + ponto.nm_local + "</h1><p>" + ponto.end_local + ", " + ponto.num_local + "</p>");
		popup.openOn(mapa);
	}

	function listarPontos() {
		if ($.active)
			return;

		let icones = [
			L.icon({
				iconUrl: (highDpi ? "/public/img/marker@2x.png" : "/public/img/marker.png"),
				iconSize: [25, 34],
				iconAnchor: [12, 34],
				popupAnchor: [0, 25]
			})
		];

		for (let i = 1; i <= 8; i++) {
			icones.push(L.icon({
				iconUrl: (highDpi ? `/public/img/marker${i}@2x.png` : `/public/img/marker${i}.png`),
				iconSize: [25, 34],
				iconAnchor: [12, 34],
				popupAnchor: [0, 25]
			}));
		}

		let pontos = <%- JSON.stringify(locais) %>;

		for (let i = 0; i < pontos.length; i++) {
			let marker = L.marker([pontos[i].lat_local, pontos[i].lng_local], { icon: icones[pontos[i].idtipo] });
		
			marker.addTo(mapa);
			marker.ponto = pontos[i];
		
			marker.on("click", onMarkerClick);
		}
	}

	function iniciarMapa(lat, lng) {
		let latlng = new L.LatLng(lat, lng);

		L.control.zoom({
			position: "topright"
		}).addTo(mapa);

		L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
			attribution: '&copy; <a href="http://www.openstreetmap.org/copyright">OpenStreetMap</a>',
			subdomains: ['a', 'b', 'c'],
			center: [latlng],
			minZoom: 5
		}).addTo(mapa);

		mapa.setView(latlng, 16);

		listarPontos();
	}

	iniciarMapa(-23.5870798, -46.6444253);

</script>
